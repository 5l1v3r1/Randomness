#!/usr/bin/env python
# sulley_http_fuzzer.py - The name says it all.
# v0.03 2015/10/04
#
# Copyright (C); 2015 jnqpblc - jnqpblc at gmail
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option); any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
if len(sys.argv) < 5:
    sys.exit('\nUsage: %s <ip|192.168.1.10> <port|80> <process|Savant.exe> <start-cmd|C:\\Savant\\Savant.exe>' % sys.argv[0])

target_ip = str(sys.argv[1])
dest_port = int(sys.argv[2])
procmon_target = str(sys.argv[1])
netmon_target = str('127.0.0.1')
process_name = str(sys.argv[3])
start_command = str(sys.argv[4])

from sulley import *
import time

s_initialize("HTTP")
# https://en.wikipedia.org/wiki/List_of_HTTP_header_fields
s_string("GET")
s_delim(" ")
s_delim("/")
s_string("index.html")
s_delim(" ")
s_string("HTTP")
s_delim("/")
s_string("1")
s_delim(".")
s_string("1")
s_static("\r\n")

s_static("Host: ")
s_string("Sulley")
s_static("\r\n")

s_static("Accept-Charset: ")
s_string("utf-8")
s_static("\r\n")

s_static("Accept-Datetime: ")
s_string("Sun, 9 Sep 2001 01:46:40 GMT")
s_static("\r\n")

s_static("Accept-Encoding: ")
s_string("gzip, deflate")
s_static("\r\n")

s_static("Accept-Language: ")
s_string("en-US")
s_delim(",")
s_string("en;q=0.5")
s_static("\r\n")

s_static("Accept: ")
s_string("text/plain")
s_static("\r\n")

s_static("Authorization: ")
s_string("Basic")
s_delim(" ")
s_string("am5xcGJsYzpqbnFwYmxj")
s_static("\r\n")

s_static("Cache-Control: ")
s_string("no-cache")
s_static("\r\n")

s_static("Connection: ")
s_string("keep-alive")
s_static("\r\n")

s_static("Content-Length: ")
s_string("42")
s_static("\r\n")
	
s_static("Content-MD5: ")
s_string("YzQyNTU3OTIyNTJlOGQ2OWY0MzAwZGMxNWZhMGQ2NWI=")
s_static("\r\n")

s_static("Content-Type: ")
s_string("application/x-www-form-urlencoded")
s_static("\r\n")

s_static("Cookie: ")
s_string("$Version=1337; Skin=sulley;")
s_static("\r\n")

s_static("Date: ")
s_string("Sun, 9 Sep 2001 01:46:40 GMT")
s_static("\r\n")

s_static("DNT: ")
s_string("1")
s_static("\r\n")

s_static("Expect: ")
s_string("100-continue")
s_static("\r\n")

s_static("From: ")
s_string("jnqpblc@randomness.github")
s_static("\r\n")

s_static("Front-End-Https: ")
s_string("o")
s_static("\r\n")

s_static("If-Match: ")
s_string("c4255792252e8d69f4300dc15fa0d65b")
s_static("\r\n")

s_static("If-Modified-Since: ")
s_string("Sun, 9 Sep 2001 01:46:40 GMT")
s_static("\r\n")

s_static("If-None-Match: ")
s_string("c4255792252e8d69f4300dc15fa0d65b")
s_static("\r\n")

s_static("If-Range: ")
s_string("c4255792252e8d69f4300dc15fa0d65b")
s_static("\r\n")

s_static("If-Unmodified-Since: ")
s_string("Sun, 9 Sep 2001 01:46:40 GMT")
s_static("\r\n")

s_static("Keep-Alive: ")
s_string("300")
s_static("\r\n")

s_static("Max-Forwards: ")
s_string("1")
s_static("\r\n")

s_static("Origin: ")
s_string("https://github.com/jnqpblc/Randomness")
s_static("\r\n")

s_static("Pragma: ")
s_string("no-cache")
s_static("\r\n")

s_static("Proxy-Authorization: ")
s_string("Basic")
s_delim(" ")
s_string("am5xcGJsYzpqbnFwYmxj")
s_static("\r\n")

s_static("Proxy-Connection: ")
s_string("keep-alive")
s_static("\r\n")

s_static("Range: ")
s_string("bytes=500-99")
s_static("\r\n")

s_static("Referer: ")
s_string("https://github.com/jnqpblc/Randomness")
s_static("\r\n")

s_static("TE: ")
s_string("trailers, deflate")
s_static("\r\n")

s_static("Upgrade: ")
s_string("HTTP/2.0")
s_static("\r\n")

s_static("User-Agent: ")
s_string("Mozilla/5.0 (X11; Linux x86_64; rv:13.0) Gecko/20151004 Firefox/42.0")
s_static("\r\n")

s_static("Via: ")
s_string("1.0 Sulley, github.com (jnqpblc)")

s_static("Warning: ")
s_string("199 Miscellaneous warning")
s_static("\r\n")

s_static("X-Att-Deviceid: ")
s_string("GT-P7320/P7320XXLP")
s_static("\r\n")

s_static("X-Csrf-Token: ")
s_string("am5xcGJsY3xSYW5kb21uZXNzfGdpdGh1Yg==")
s_static("\r\n")

s_static("X-Forwarded-For: ")
s_string("127.0.0.1")
s_static("\r\n")

s_static("X-Forwarded-Host: ")
s_string("Sulley")
s_static("\r\n")

s_static("X-Forwarded-Proto: ")
s_string("http")
s_static("\r\n")

s_static("X-HTTP-Method-Override: ")
s_string("DELETE")
s_static("\r\n")

s_static("X-Requested-With: ")
s_string("XMLHttpRequest")
s_static("\r\n")

s_static("x-wap-profile: ")
s_string("http://wap.samsungmobile.com/uaprof/SGH-I777.xml")
s_static("\r\n")

s_static("\r\n")

print "Mutations: " + str(s_num_mutations())

print "Press CTRL/C to cancel in ",
for i in range(3):
	print str(3 - i) + " ",
	sys.stdout.flush()
	time.sleep(1)

print "Instantiating session"
sess = sessions.session(session_filename="http.session", sleep_time=0.25)

print "Instantiating target"
target = sessions.target(target_ip, dest_port)
target.procmon = pedrpc.client(procmon_target, 26002)
target.netmon = pedrpc.client(netmon_target, 26001)

target.procmon_options =  {
	"proc_name" : process_name,
	"stop_commands" : ['wmic process where (name="' + process_name + '") delete"'],
	"start_commands" : [start_command],
}

print "Adding target"
sess.add_target(target)

print "Building graph"
sess.connect(s_get("HTTP"))

print "Starting fuzzing now"
sess.fuzz()
